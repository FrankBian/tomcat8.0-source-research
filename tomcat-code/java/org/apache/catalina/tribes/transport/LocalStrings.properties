# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

IDataSender.ack.eof=EOF reached at local port [{0}:{1,number,integer}]
IDataSender.ack.missing=Unable to read acknowledgement from [{0}:{1,number,integer}] in {2,number,integer} ms. Disconnecting socket, and trying again.
IDataSender.ack.wrong=Missing correct ACK after 10 bytes read at local port [{0}:{1,number,integer}]
IDataSender.closeSocket=Sender close socket to [{0}:{1,number,integer}] (close count {2,number,integer})
IDataSender.disconnect=Sender disconnect from [{0}:{1,number,integer}] (disconnect count {2,number,integer})
IDataSender.openSocket=Sender open socket to [{0}:{1,number,integer}] (open count {2,number,integer})
IDataSender.openSocket.failure=Open sender socket [{0}:{1,number,integer}] failure! (open failure count {2,number,integer})
IDataSender.send.again=Send data again to [{0}:{1,number,integer}]

NioReceiver.alreadyStarted=ServerSocketChannel already started
NioReceiver.cleanup.fail=Unable to cleanup on selector close
NioReceiver.clientDisconnect=Replication client disconnected, error when polling key. Ignoring client.
NioReceiver.requestError=Unable to process request in NioReceiver
NioReceiver.run.fail=Unable to run replication listener
NioReceiver.start.fail=Unable to start cluster receiver
NioReceiver.stop.fail=Unable to close cluster receiver selector
NioReceiver.stop.threadRunning=The NioReceiver thread did not stop in a timely manner. Errors may be observed when the selector is closed.
NioReceiver.threadpool.fail=ThreadPool cannot be initialized. Listener not started.
NioReceiver.threadsExhausted=Channel key is registered, but has had no interest ops for the last [{0}] ms. (cancelled: [{1}]):[{2}] last access:[{3} Possible cause: all threads used, perform thread dump

PooledSender.senderDisconnectFail=Failed to disconnect sender
